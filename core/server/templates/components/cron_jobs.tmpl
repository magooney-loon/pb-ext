{{define "cron_jobs"}}

<div class="section m-t-base">


    <!-- Cron Jobs Table -->
    <div class="card">

            <div class="flex align-center">

<header class="section-header">
        <h4 class="section-title">
             <i class="ri-time-line"></i>
                   Cron Jobs
        </h4>
    </header>


                <div class="flex align-center gap-5">
                    <div style="display: flex; align-items: center; gap: 8px;">
                        <label style="font-size: 13px; color: var(--txtHintColor);">Timezone:</label>
                        <select class="field-input" id="cron-timezone" style="padding: 4px 8px; width: 120px;" onchange="updateCronTimezone()">
                            <option value="UTC" selected>UTC</option>
                            <option value="America/New_York">EST</option>
                            <option value="America/Los_Angeles">PST</option>
                            <option value="Europe/London">GMT</option>
                            <option value="Asia/Tokyo">JST</option>
                            <option value="Europe/Berlin">CET</option>
                            <option value="Asia/Shanghai">CST</option>
                        </select>
                    </div>
                    <button class="btn btn-sm btn-outline" onclick="refreshCronJobs()">
                        <i class="ri-refresh-line"></i>
                        <span>Refresh</span>
                    </button>

                </div>
            </div>

<!-- Stats Overview -->
    <div class="flex gap-5 m-t-base">
        <div class="card card-sm view-card">

                <div class="flex flex-column">
                    <div class="flex align-center gap-5 m-b-5">
                        <i class="ri-time-line txt-hint"></i>
                        <div class="txt-lg" id="total-jobs">0</div>
                    </div>
                    <div class="txt-hint txt-sm">Total Jobs</div>
                </div>

        </div>
        <div class="card card-sm view-card">

                <div class="flex flex-column">
                    <div class="flex align-center gap-5 m-b-5">
                        <i class="ri-play-line txt-success"></i>
                        <div class="txt-lg txt-success" id="active-jobs">0</div>
                    </div>
                    <div class="txt-hint txt-sm">Running Jobs</div>
                </div>

        </div>
    </div>
            <div class="cron-jobs-container" id="cron-jobs-list">
                <!-- Loading state -->
                <div class="cron-loading" id="cron-loading">
                    <i class="ri-loader-4-line animate-spin"></i>
                    <span>Loading cron jobs...</span>
                </div>

                <!-- Empty state -->
                <div class="cron-empty" id="cron-empty" style="display: none;">
                    <div class="flex flex-column align-center txt-center p-lg">
                        <i class="ri-time-line txt-hint" style="font-size: 48px;"></i>
                        <h5 class="m-t-base m-b-5">No cron jobs found</h5>
                        <p class="txt-hint">Cron jobs must be registered in your Go application code.</p>

                    </div>
                </div>

                <!-- Jobs table -->
                <div class="table-wrapper" id="cron-table-wrapper" style="display: none;">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Job Name</th>
                                <th>Schedule</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="cron-jobs-tbody">
                            <!-- Jobs will be populated here -->
                        </tbody>
                    </table>
                </div>
            </div>



</div>

<!-- Cron Job Information Modal -->
<div class="overlay" id="cron-info-overlay" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000; justify-content: center; align-items: center;">
    <div class="popup" style="background: var(--baseColor); border-radius: 8px; box-shadow: 0 10px 40px rgba(0,0,0,0.2); max-width: 90vw; max-height: 90vh; overflow: hidden; position: relative; width: 700px;">
        <div class="popup-header" style="padding: 20px 24px; border-bottom: 1px solid var(--baseAlt2Color); display: flex; align-items: center; justify-content: space-between;">
            <h4 class="popup-title" style="margin: 0; font-size: 18px; font-weight: 600;">How to Add Cron Jobs</h4>
            <button type="button" class="popup-close-btn" onclick="hideCronJobInfo()" style="background: none; border: none; font-size: 20px; cursor: pointer; padding: 4px; border-radius: 4px;">
                <i class="ri-close-line"></i>
            </button>
        </div>
        <div class="popup-content" style="padding: 24px; max-height: calc(90vh - 120px); overflow-y: auto;">
            <div class="cron-info-content">
                <div class="alert alert-info" style="background: rgba(59, 130, 246, 0.1); border: 1px solid rgba(59, 130, 246, 0.2); border-radius: 6px; padding: 16px; margin-bottom: 20px;">
                    <div style="display: flex; align-items: center; gap: 8px; margin-bottom: 8px;">
                        <i class="ri-information-line" style="color: #3b82f6;"></i>
                        <strong>PocketBase Cron Jobs</strong>
                    </div>
                    <p style="margin: 0; color: var(--txtHintColor);">
                        PocketBase cron jobs must be registered in your Go application code. They cannot be created or edited through the web interface.
                    </p>
                </div>

                <h6 style="margin-top: 20px; margin-bottom: 12px;">Registration Example</h6>
                <pre style="background: var(--baseAlt1Color); border: 1px solid var(--baseAlt2Color); border-radius: 6px; padding: 16px; overflow-x: auto; font-size: 13px; line-height: 1.4;"><code>// In your main.go or hooks file
app.OnBootstrap().BindFunc(func(e *core.BootstrapEvent) error {
    // Add a daily cleanup job
    app.Cron().MustAdd("dailyCleanup", "0 2 * * *", func() {
        app.Logger().Info("Running daily cleanup...")
        // Your cleanup logic here
    })

    // Add a hourly report job
    app.Cron().MustAdd("hourlyReport", "0 * * * *", func() {
        app.Logger().Info("Generating hourly report...")
        // Your report logic here
    })

    return e.Next()
})</code></pre>

                <h6 style="margin-top: 20px; margin-bottom: 12px;">Cron Expression Format</h6>
                <div style="background: var(--baseAlt1Color); border: 1px solid var(--baseAlt2Color); border-radius: 6px; padding: 16px;">
                    <div style="display: grid; grid-template-columns: 1fr 3fr; gap: 8px; font-size: 13px;">
                        <div style="font-weight: 600;">Format:</div>
                        <div><code>minute hour day month weekday</code></div>

                        <div style="font-weight: 600;">Range:</div>
                        <div><code>0-59 0-23 1-31 1-12 0-6</code></div>
                    </div>
                </div>

                <h6 style="margin-top: 20px; margin-bottom: 12px;">Common Examples</h6>
                <div style="display: grid; grid-template-columns: 1fr 2fr; gap: 12px; font-size: 13px;">
                    <div><code>0 0 * * *</code></div>
                    <div>Daily at midnight</div>

                    <div><code>0 */2 * * *</code></div>
                    <div>Every 2 hours</div>

                    <div><code>30 9 * * 1</code></div>
                    <div>Every Monday at 9:30 AM</div>

                    <div><code>0 0 1 * *</code></div>
                    <div>First day of every month</div>

                    <div><code>*/15 * * * *</code></div>
                    <div>Every 15 minutes</div>
                </div>

                <h6 style="margin-top: 20px; margin-bottom: 12px;">Macros</h6>
                <div style="display: grid; grid-template-columns: 1fr 2fr; gap: 12px; font-size: 13px;">
                    <div><code>@yearly</code></div>
                    <div>Run once a year (0 0 1 1 *)</div>

                    <div><code>@monthly</code></div>
                    <div>Run once a month (0 0 1 * *)</div>

                    <div><code>@weekly</code></div>
                    <div>Run once a week (0 0 * * 0)</div>

                    <div><code>@daily</code></div>
                    <div>Run once a day (0 0 * * *)</div>

                    <div><code>@hourly</code></div>
                    <div>Run once an hour (0 * * * *)</div>
                </div>
            </div>
        </div>
        <div class="popup-footer" style="padding: 16px 24px; border-top: 1px solid var(--baseAlt2Color); display: flex; gap: 12px; justify-content: flex-end;">
            <button type="button" class="btn btn-outline" onclick="hideCronJobInfo()">Close</button>
            <a href="https://github.com/pocketbase/pocketbase/discussions" target="_blank" class="btn btn-success">
                <i class="ri-external-link-line"></i>
                <span>PocketBase Docs</span>
            </a>
        </div>
    </div>
</div>

<!-- Job Details Modal -->
<div class="overlay" id="cron-details-overlay" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000; justify-content: center; align-items: center;">
    <div class="popup popup-lg" style="background: var(--baseColor); border-radius: 8px; box-shadow: 0 10px 40px rgba(0,0,0,0.2); max-width: 90vw; max-height: 90vh; overflow: hidden; position: relative;">
        <div class="popup-header" style="padding: 20px 24px; border-bottom: 1px solid var(--baseAlt2Color); display: flex; align-items: center; justify-content: space-between;">
            <h4 class="popup-title" style="margin: 0; font-size: 18px; font-weight: 600;">Job Details</h4>
            <button type="button" class="popup-close-btn" onclick="hideCronDetailsModal()" style="background: none; border: none; font-size: 20px; cursor: pointer; padding: 4px; border-radius: 4px;">
                <i class="ri-close-line"></i>
            </button>
        </div>
        <div class="popup-content" style="padding: 24px; max-height: calc(90vh - 120px); overflow-y: auto;">
            <div id="cron-job-details">
                <!-- Job details will be populated here -->
            </div>
        </div>
        <div class="popup-footer" style="padding: 16px 24px; border-top: 1px solid var(--baseAlt2Color); display: flex; gap: 12px; justify-content: flex-end;">
            <button type="button" class="btn btn-outline" onclick="hideCronDetailsModal()">Close</button>
            <button type="button" class="btn btn-success" onclick="runJobFromDetails()" id="run-job-from-details">
                <i class="ri-play-line"></i>
                <span>Run Now</span>
            </button>
        </div>
    </div>
</div>



{{template "cron_jobs_css" .}}
{{template "cron_details_js" .}}



{{end}}
